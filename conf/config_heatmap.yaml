# CUDA_VISIBLE_DEVICES=0,1 python create_heatmaps.py --config config_template.yaml

exp_arguments:
  # number of classes (Depends on class)
  n_classes: 2
  # name tag for saving generated figures and assets
  save_exp_code: output
  save_dir: /PATH/TO/SAVE/DIR
  # where to save raw asset files
  raw_save_dir: heatmaps/raw
  # where to save final heatmaps
  production_save_dir: heatmaps/production

  ## Cross
  exp_dir: /PATH/TO/EXP/DIR
  feats_path_block: /PATH/TO/BLOCK_DIR
  feats_path_fine: /PATH/TO/FINE_DIR

  batch_size: 100
data_arguments:
  # where is data stored; can be a single str path or a dictionary of key, data_dir mapping
  data_dir: /PATH/TO/DATA_DIR
  # where overlay data dir is stored (e.g. false coloring)
  data_overlay_dir: /PATH/TO/FALSE_COLOR_DIR
  # csv list containing slide_ids (can additionally have seg/patch paramters, class labels, etc.)
  process_list: 'csv/OTLS/process_list_heatmap.csv'
  # preset file for segmentation/patching
  preset: ~
  # file extention for slides
  slide_ext: .tiff
  # label dictionary for str: interger mapping (optional)
  label_dict:
    0: 0
    1: 1
patching_arguments:
  # arguments for patching
  mask_dir: ~
  patch_size: 128
  patch_size_z: 32
  patch_mode: '3D'
  slice_mode: 'all'
  data_mode: 'OTLS'
  contour_fn: 'four_pt_easy'
  overlap: 0.75
  patch_level: 0
  custom_downsample: 1
model_arguments:
  # arguments for initializing feature extractor model
  extractor_name: '2plus1d'
  load_extractor_weights: True
  pretrained_extractor_path: 'imagenet'
  ckpt_path: 1
heatmap_arguments:
  # downsample at which to visualize heatmap (-1 refers to downsample closest to 32x downsample)
  vis_level: 0
  # transparency for overlaying heatmap on background (0: background only, 1: foreground only)
  alpha: 0.4
  # whether to use a blank canvas instead of original slide
  blank_canvas: false
  # whether to also save the original H&E image
  save_orig: true
  # file extension for saving heatmap/original image
  save_ext: jpg
  # Convert to percentile
  convert_to_percentiles: False
  # Whether to have smooth contour
  contour: True
  # whether to use gaussian blur for further smoothing
  blur: True
  # whether to shift the 4 default corner points for checking if a patch is inside a foreground contour
  use_center_shift: true
  # whether to only compute heatmap for ROI specified by x1, x2, y1, y2
  use_roi: false
  # whether to calculate heatmap with specified overlap (by default, coarse heatmap without overlap is always calculated)
  draw_fine_heatmap: True
  draw_blocky_heatmap: False
  # whether to binarize attention scores
  binarize: false
  binary_thresh: -1
  attn_mode: 'whole'
  custom_downsample: 1
  cmap_normalize: 'ig_slice'
  heatmap_score: 'ig'
  cmap_min: -1
  cmap_max: 1
  cmap: coolwarm
sample_arguments:
  sample_patch_score: 'ig'
  samples:
    - name: "topk_high"
      sample: true
      field: 'volume'
      seed: 1
      k: 10 # save top-k patches
      mode: topk
    - name: 'topk_low'
      sample: true
      field: 'volume'
      seed: 1
      k: 10 # save top-k patches
      mode: reverse_topk


